import java.util.Scanner;

public class Backpack {

    int[][] items; // first row is itemID second is Quanity
    String[] itemNames = {"Pokeball", "Potion"};

    // for loop / if check for 0 quanity else print item name and quanity
    public void addItemQuanity(int itemID, int quanityAdded) {
        items[itemID][0] += quanityAdded;
    }

    public void loseItemQuanity(int itemID, int quanityLost) {
        items[itemID][0] += quanityLost;
    }

    public void initlizer() {
        for (int counter = 0; counter < 1; counter++) {
            for (int counter2 = 0; counter2 < 1; counter2++) {
                items[counter][counter2]= 0;
            }
        }
    }

    static int pokeballs, potions, antidotes, choice;
    static Scanner input = new Scanner(System.in);

    public static void checkBackpack() {
        //ArrayLoop through items
        
        System.out.printf("Would you like to use an item?\n input 1 for"
                + " yes anything else for no\n");
        choice = input.nextInt();
        if (choice == 1) {
            useItem();
        }
    }

    public static void useItem() {
        System.out.printf("Which item would you like to use?\n"
                + "1 for Pokeball\n"
                + "2 for Potions\n"
                + "3 for Antidotes\n");
        choice = input.nextInt();
        switch (choice) {
            case 1:
                System.out.println("You throw a pokeball. TBI");
                //pokeball(); // Implement this item methods
                //pokeball.setPokeballs(pokeballs - 1);  // This is not the right syntax
                break;
            case 2:
                System.out.println("You used a potion. TBI");
                //potion();
                //potion.setPotions(potions - 1);  // This is not the right syntax
                break;
            case 3:
                System.out.println("You used an antidote. TBI");
                //antidote();
                //antidote.setAntidotes(antidote - 1);  // This is not the right syntax
                break;
            default:
                break;
        }
    }
}
